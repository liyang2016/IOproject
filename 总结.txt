1)文件操作类
	java.io.File类用于表示文件（目录）
	File类只用于表示文件（目录）的信息（名称、大小等），不能用于文件内容的访问
2)字节流
	a)InputStream && OutputStream类
	  InputStream抽象了应用程序读取数据的方式
	  OutputStream抽象了应用程序写出数据的方式
	b)RandomAccessFile类  java提供的对文件内容的访问，既可以读文件，也可以写文件。
	  RandomAccessFile类支持随机访问文件，可以访问文件的任意位置
	c)FileInputStream && FileOutputStream类
	  FileInputStream  具体实现了在文件上读取数据
 	  FileOutputStream 实现了向文件中写出byte数据的方法
	d)DataInputStream && DataOutputStream类
	      对"流"功能的扩展，可以更加方便地读取整型,long,字符等类型数据
      writeInt()/writeDouble()/writeUTF()
	  readInt()/readDouble()/readUTF()
	e)BufferedInputStream && BufferedOutputStream类
	     这两个流类为IO提供了带缓冲区的操作，一般打开文件进行写入或读取操作时，都会加上缓冲，这种流模式提高了IO的性能
 	     从应用程序中把输入放入文件，相当于将一缸水倒入到另一个缸中:
 	  FileOutputStream--->write()方法相当于一滴一滴地把水“转移”过去
      DataOutputStream-->writeXxx()方法会方便一些，相当于一瓢一瓢把水“转移”过去
      BufferedOutputStream--->write方法更方便，相当于一飘一瓢先放入桶中，再从桶中倒入到另一个缸中，性能提高了
3)字符流
	字符的处理:一次处理一个字符,字符的底层任然是基本的字节序列
	字符流的基本实现
   	a)InputStreamReader && OutputStreamWriter类  
   	  InputStreamReader  完成byte流解析为char流,按照编码解析
   	  OutputStreamWriter 提供char流到byte流，按照编码处理  
	b)FileReader && FileWriter类
	c)BufferedReader && BufferedWriter类
   	  BufferedReader   			   ---->readLine 一次读一行
   	  BufferedWriter/PrintWriter   ---->写一行    